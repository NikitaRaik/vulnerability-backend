import motor.motor_asyncio
from model import Vulnerability

client = motor.motor_asyncio.AsyncIOMotorClient()

db = client['vulnerability_db']
vulnerability_tb = db['vulnerability']


async def fetch_all_vulnerabilities():
    vulnerabilities = []
    cursor = vulnerability_tb.find({})
    async for document in cursor:
        vulnerabilities.append(Vulnerability(**document))
    return vulnerabilities


async def create_vulnerability(vulnerability):
    document = vulnerability
    result = await vulnerability_tb.insert_one(document)
    return document


async def update_vulnerability(title, desc):
    await vulnerability_tb.update_one({"title": title}, {"$set": {"description": desc}})
    document = await vulnerability_tb.find_one({"title": title})
    return document


async def fetch_one_vulnerability(title):
    document = await vulnerability_tb.find_one({"title": title})
    return document


async def remove_vulnerability(title):
    await vulnerability_tb.delete_one({"title": title})
    return True
